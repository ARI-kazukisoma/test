pipeline {
  agent {node { label 'master' }}
  stages {
    stage("一覧HTML作成") {
      steps {
        script {
          def json = load("../${JOB_NAME}/lib/json.groovy")
          def template = load("../${JOB_NAME}/lib/template.groovy")
          def CONSTS = load("../${JOB_NAME}/constant/main.groovy").getAll()

          def configures = []
          def existEnvs = []
          dir(env.ENV_CONFIGURATION_PATH) {
            def existEnv = sh returnStdout: true, script: "ls "
            existEnvs = existEnv.split("\n").toList()
          }
          for (existEnv in existEnvs) {
            deployAppJson = json.getEnvConf(existEnv, CONSTS.ENV_CONF_FILE_NAME.DEPLOY_APP)
            provisioningJson = json.getEnvConf(existEnv, CONSTS.ENV_CONF_FILE_NAME.PROVISIONING)
            updateDataJson = json.getEnvConf(existEnv, CONSTS.ENV_CONF_FILE_NAME.UPDATE_DATA)
            commonJson = json.getEnvConf(existEnv, CONSTS.ENV_CONF_FILE_NAME.COMMON)
            configures.push([
              'common': commonJson,
              'deploy_app': deployAppJson,
              'update_data': updateDataJson,
              'provisioning': provisioningJson,
            ])
          }
          echo "aaaaaaaaaaaaa"
          println configures[0].common.request_datetime
          println configures[1]
          echo "aaaaaaaaaaaaa"
          // def html = template.toString("env_configure.template", configures)
          // echo html
        }
      }
    }
  }
}