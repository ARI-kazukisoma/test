def transMasterTag = null
pipeline {
  agent {node { label 'master' }}
  parameters {
    string(name: 'ENV', description: 'PlanXXを指定')
    string(name: 'BRANCH', description: 'ブランチを指定')
    text(name: 'MASTER_TAGS', description: 'マスタータグ')
  }
  stages {
    stage("環境情報の仮保存") {
      steps {
        script {
          def json = load("lib/json.groovy")
          def CONSTS = load("constant/main.groovy").getAll()

          def jsonData = [
            'master_tags': params.MASTER_TAGS,
            'branch': params.BRANCH
          ]
          json.createTmpEnvConfFile(jsonData, params.ENV, CONSTS.ENV_CONF_FILE_NAME.UPDATE_DATA)

          // マスタータグの変換(入力時にチェックはしているのでここではsuccessの値を考慮しない)
          def validateParameter = load("lib/validateParameter.groovy")
          def (success, _transMasterTag, errorCode) = validateParameter.checkMasterTags(params.MASTER_TAGS)
          transMasterTag = _transMasterTag
        }
      }
    }
    stage("YAMLファイル作成") {
      steps {
        script {
          def template = load("lib/template.groovy")
          def binding = [
            'target_env': params.ENV.toLowerCase(),
            'user': '${USERNAME}',
            'password': '${PASSWORD}';
          ]
          message = template.toString("yaml_configure.template", binding)
          echo message
        }
      }
    }
    stage("データ更新") {
      steps {
        // TODO (m.toga) ノードの設定は変更する必要がある
        node("master") {
          script {
            def NODE_ENV = "${params.ENV.toLowerCase()}"
            def SQL_ENV = "develop"
            // TODO (m.toga) 実際に実行する際は"echo"を"sh"にする
            echo "# /home/jenkins/AvalonServerShell/avalon_update_master.sh \"${NODE_ENV}\" \"${SQL_ENV}\" \"${params.BRANCH}\" \"${transMasterTag}\""
          }
        }
      }
    }
  }
}